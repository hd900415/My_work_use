apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
spec:
  serviceName: elasticsearch
  replicas: {{ .Values.elasticsearch.replicas }}
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      initContainers:
      - name: init-certificates
        image: {{ .Values.elasticsearch.image }}
        imagePullPolicy: Always
        command: ['sh', '-c', 'mkdir -p config/certs && echo "{{ .Values.elasticsearch.password }}" | bin/elasticsearch-certutil cert --silent --pem --out config/certs/elastic-certificates.p12 --self-signed --pass && ls -l config/certs && cp config/certs/elastic-certificates.p12 /certs && ls -l /certs']
        volumeMounts:
        - name: elasticsearch-certificates
          mountPath: /certs
      containers:
      - name: elasticsearch
        image: {{ .Values.elasticsearch.image }}
        imagePullPolicy: Always
        ports:
        - containerPort: 9200
        - containerPort: 9300
        env:
        - name: cluster.name
          value: "pt-es-cluster"
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: discovery.seed_hosts
          value: "elasticsearch-0.elasticsearch-headless,elasticsearch-1.elasticsearch-headless,elasticsearch-2.elasticsearch-headless"
        - name: cluster.initial_master_nodes
          value: "elasticsearch-0,elasticsearch-1,elasticsearch-2"
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-secret
              key: password
        - name: xpack.security.enabled
          value: "true"
        - name: xpack.security.transport.ssl.enabled
          value: "true"
        - name: xpack.security.transport.ssl.verification_mode
          value: "certificate"
        - name: xpack.security.transport.ssl.keystore.path
          value: "/usr/share/elasticsearch/config/certs/elastic-certificates.p12"
        - name: xpack.security.transport.ssl.keystore.password
          value: "{{ .Values.elasticsearch.password }}"
        - name: xpack.security.transport.ssl.truststore.path
          value: "/usr/share/elasticsearch/config/certs/elastic-certificates.p12"
        - name: xpack.security.transport.ssl.truststore.password
          value: "{{ .Values.elasticsearch.password }}"
        resources:
          limits:
            cpu: {{ .Values.elasticsearch.resources.limits.cpu }}
            memory: {{ .Values.elasticsearch.resources.limits.memory }}
          requests:
            cpu: {{ .Values.elasticsearch.resources.requests.cpu }}
            memory: {{ .Values.elasticsearch.resources.requests.memory }}
        volumeMounts:
        - name: elasticsearch-storage
          mountPath: /usr/share/elasticsearch/data
        - name: elasticsearch-certificates
          mountPath: /usr/share/elasticsearch/config/certs
      volumes:
      - name: elasticsearch-certificates
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.elasticsearch.storage.size }}
      storageClassName: {{ .Values.elasticsearch.storage.storageClassName }}
